/**
 * DnD Brand E-commerce - Shop Page Functionality
 * Displays products from backend API on the shop page
 */

// API URL
const API_URL = 'http://localhost:5000/api';

document.addEventListener('DOMContentLoaded', function() {
    // Initialize variables
    let products = [];
    let filteredProducts = [];
    let currentPage = 1;
    const productsPerPage = 9;
    let priceRange = {
        min: 0,
        max: 5000
    };
    let activeFilters = {
        category: 'all',
        colors: [],
        sizes: [],
        priceMin: 0,
        priceMax: 5000
    };
    let sortOption = 'default';

    // DOM Elements
    const productsContainer = document.getElementById('products-container');
    const productCount = document.getElementById('product-count');
    const pagination = document.getElementById('pagination');
    const sortSelect = document.getElementById('sort-by');
    const categoryLinks = document.querySelectorAll('.category-list a');
    const colorFilters = document.querySelectorAll('.color-filter input');
    const sizeFilters = document.querySelectorAll('.size-filter input');
    const applyFiltersBtn = document.getElementById('apply-filters');
    const resetFiltersBtn = document.getElementById('reset-filters');
    const applyPriceFilterBtn = document.getElementById('apply-price-filter');
    const mobileFilterToggle = document.querySelector('.mobile-filter-toggle');
    const filterClose = document.querySelector('.filter-close');
    const shopSidebar = document.querySelector('.shop-sidebar');
    const filterOverlay = document.querySelector('.filter-overlay');

    // Initialize price slider
    const priceSlider = document.getElementById('price-slider');
    const minPriceInput = document.getElementById('min-price');
    const maxPriceInput = document.getElementById('max-price');

    if (priceSlider) {
        noUiSlider.create(priceSlider, {
            start: [0, 5000],
            connect: true,
            step: 50,
            range: {
                'min': 0,
                'max': 5000
            },
            format: {
                to: function(value) {
                    return Math.round(value);
                },
                from: function(value) {
                    return Number(value);
                }
            }
        });

        priceSlider.noUiSlider.on('update', function(values, handle) {
            if (handle === 0) {
                minPriceInput.value = values[0] + ' ₺';
            } else {
                maxPriceInput.value = values[1] + ' ₺';
            }
        });
    }

    // Initialize mobile filters
    function initMobileFilters() {
        if (mobileFilterToggle && shopSidebar) {
            mobileFilterToggle.addEventListener('click', function() {
                shopSidebar.classList.add('active');
                filterOverlay.classList.add('active');
                document.body.style.overflow = 'hidden';
            });
            
            if (filterClose) {
                filterClose.addEventListener('click', function() {
                    shopSidebar.classList.remove('active');
                    filterOverlay.classList.remove('active');
                    document.body.style.overflow = '';
                });
            }
            
            if (filterOverlay) {
                filterOverlay.addEventListener('click', function() {
                    shopSidebar.classList.remove('active');
                    filterOverlay.classList.remove('active');
                    document.body.style.overflow = '';
                });
            }
        }
    }

    // Fetch products from API
    async function fetchProducts() {
        try {
            const response = await fetch('/api/products');
            if (!response.ok) {
                throw new Error('Ürünler yüklenirken bir hata oluştu.');
            }
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Ürünler yüklenirken hata:', error);
            // For demo purposes, return mock data if API fails
            return getMockProducts();
        }
    }

    // Mock products for demo
    function getMockProducts() {
        return [
            {
                id: 1,
                name: 'Premium Pamuklu T-Shirt',
                category: 'men',
                price: 349.99,
                oldPrice: 499.99,
                image: 'https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['black', 'white', 'blue'],
                sizes: ['s', 'm', 'l', 'xl'],
                isNew: true,
                isSale: true
            },
            {
                id: 2,
                name: 'Slim Fit Denim Pantolon',
                category: 'men',
                price: 599.99,
                image: 'https://images.unsplash.com/photo-1542272604-787c3835535d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['blue', 'black'],
                sizes: ['s', 'm', 'l', 'xl', 'xxl'],
                isNew: false,
                isSale: false
            },
            {
                id: 3,
                name: 'Oversize Sweatshirt',
                category: 'women',
                price: 449.99,
                oldPrice: 599.99,
                image: 'https://images.unsplash.com/photo-1515886657613-9f3515b0c78f?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['white', 'gray', 'black'],
                sizes: ['xs', 's', 'm', 'l'],
                isNew: false,
                isSale: true
            },
            {
                id: 4,
                name: 'Deri Ceket',
                category: 'women',
                price: 1299.99,
                image: 'https://images.unsplash.com/photo-1551488831-00ddcb6c6bd3?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['black', 'brown'],
                sizes: ['s', 'm', 'l'],
                isNew: true,
                isSale: false
            },
            {
                id: 5,
                name: 'Premium Deri Kemer',
                category: 'accessories',
                price: 249.99,
                image: 'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['black', 'brown'],
                sizes: ['s', 'm', 'l'],
                isNew: false,
                isSale: false
            },
            {
                id: 6,
                name: 'Minimalist Saat',
                category: 'accessories',
                price: 899.99,
                oldPrice: 1199.99,
                image: 'https://images.unsplash.com/photo-1524805444758-089113d48a6d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['black', 'silver', 'gold'],
                sizes: [],
                isNew: false,
                isSale: true
            },
            {
                id: 7,
                name: 'Yün Palto',
                category: 'men',
                price: 1499.99,
                image: 'https://images.unsplash.com/photo-1544022613-e87ca75a784a?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['gray', 'navy', 'black'],
                sizes: ['m', 'l', 'xl'],
                isNew: true,
                isSale: false
            },
            {
                id: 8,
                name: 'Yüksek Bel Jean',
                category: 'women',
                price: 499.99,
                image: 'https://images.unsplash.com/photo-1475180098004-ca77a66827be?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['blue', 'black'],
                sizes: ['xs', 's', 'm', 'l'],
                isNew: false,
                isSale: false
            },
            {
                id: 9,
                name: 'Güneş Gözlüğü',
                category: 'accessories',
                price: 349.99,
                oldPrice: 449.99,
                image: 'https://images.unsplash.com/photo-1511499767150-a48a237f0083?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['black', 'brown', 'tortoise'],
                sizes: [],
                isNew: false,
                isSale: true
            },
            {
                id: 10,
                name: 'Spor Ayakkabı',
                category: 'men',
                price: 799.99,
                image: 'https://images.unsplash.com/photo-1491553895911-0055eca6402d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['white', 'black', 'gray'],
                sizes: ['40', '41', '42', '43', '44'],
                isNew: true,
                isSale: false
            },
            {
                id: 11,
                name: 'Midi Elbise',
                category: 'women',
                price: 699.99,
                oldPrice: 899.99,
                image: 'https://images.unsplash.com/photo-1496747611176-843222e1e57c?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['red', 'black', 'navy'],
                sizes: ['xs', 's', 'm', 'l'],
                isNew: false,
                isSale: true
            },
            {
                id: 12,
                name: 'Deri Çanta',
                category: 'accessories',
                price: 1099.99,
                image: 'https://images.unsplash.com/photo-1584917865442-de89df76afd3?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80',
                colors: ['black', 'brown', 'tan'],
                sizes: [],
                isNew: true,
                isSale: false
            }
        ];
    }

    // Initialize shop
    async function initShop() {
        // Show loading state
        showLoading(true);
        
        // Fetch products
        products = await fetchProducts();
        
        // Apply initial filters
        applyFilters();
        
        // Render products
        renderProducts();
        
        // Setup event listeners
        setupEventListeners();
        
        // Initialize mobile filters
        initMobileFilters();
        
        // Hide loading state
        showLoading(false);
    }

    // Show/hide loading state
    function showLoading(show) {
        if (show) {
            // Create loading spinner
            const loadingSpinner = document.createElement('div');
            loadingSpinner.className = 'loading-spinner';
            loadingSpinner.innerHTML = `
                <i class="fas fa-spinner fa-spin"></i>
                <span>Ürünler yükleniyor...</span>
            `;
            
            // Add to products container
            productsContainer.innerHTML = '';
            productsContainer.appendChild(loadingSpinner);
        } else {
            // Remove loading spinner
            const loadingSpinner = document.querySelector('.loading-spinner');
            if (loadingSpinner) {
                loadingSpinner.remove();
            }
        }
    }

    // Apply filters to products
    function applyFilters() {
        // Filter by category
        filteredProducts = products.filter(product => {
            // Category filter
            if (activeFilters.category !== 'all' && product.category !== activeFilters.category) {
                return false;
            }
            
            // Price filter
            if (product.price < activeFilters.priceMin || product.price > activeFilters.priceMax) {
                return false;
            }
            
            // Color filter
            if (activeFilters.colors.length > 0) {
                const hasMatchingColor = product.colors.some(color => 
                    activeFilters.colors.includes(color)
                );
                
                if (!hasMatchingColor) {
                    return false;
                }
            }
            
            // Size filter
            if (activeFilters.sizes.length > 0) {
                const hasMatchingSize = product.sizes.some(size => 
                    activeFilters.sizes.includes(size)
                );
                
                if (!hasMatchingSize) {
                    return false;
                }
            }
            
            return true;
        });
        
        // Sort products
        sortProducts();
        
        // Update product count
        updateProductCount();
        
        // Reset pagination
        currentPage = 1;
    }

    // Sort products based on selected option
    function sortProducts() {
        switch (sortOption) {
            case 'price-low':
                filteredProducts.sort((a, b) => a.price - b.price);
                break;
            case 'price-high':
                filteredProducts.sort((a, b) => b.price - a.price);
                break;
            case 'name-asc':
                filteredProducts.sort((a, b) => a.name.localeCompare(b.name));
                break;
            case 'name-desc':
                filteredProducts.sort((a, b) => b.name.localeCompare(a.name));
                break;
            case 'newest':
                filteredProducts.sort((a, b) => b.id - a.id);
                break;
            default:
                // Default sorting (featured)
                filteredProducts.sort((a, b) => a.id - b.id);
                break;
        }
    }

    // Update product count
    function updateProductCount() {
        if (productCount) {
            productCount.textContent = filteredProducts.length;
        }
    }

    // Render products
    function renderProducts() {
        // Clear products container
        productsContainer.innerHTML = '';
        
        // Calculate pagination
        const totalPages = Math.ceil(filteredProducts.length / productsPerPage);
        const startIndex = (currentPage - 1) * productsPerPage;
        const endIndex = Math.min(startIndex + productsPerPage, filteredProducts.length);
        
        // Check if there are products to display
        if (filteredProducts.length === 0) {
            // Show no products message
            productsContainer.innerHTML = `
                <div class="no-products">
                    <p><i class="fas fa-search"></i></p>
                    <p>Aradığınız kriterlere uygun ürün bulunamadı.</p>
                    <p>Lütfen filtrelerinizi değiştirerek tekrar deneyin.</p>
                </div>
            `;
            
            // Hide pagination
            pagination.innerHTML = '';
            return;
        }
        
        // Create product cards
        for (let i = startIndex; i < endIndex; i++) {
            const product = filteredProducts[i];
            
            // Format price
            const price = product.price.toLocaleString('tr-TR', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
            
            // Format old price if exists
            let oldPriceHtml = '';
            if (product.oldPrice) {
                const oldPrice = product.oldPrice.toLocaleString('tr-TR', {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                });
                oldPriceHtml = `<span class="old-price">${oldPrice} ₺</span>`;
            }
            
            // Create product card
            const productCard = document.createElement('div');
            productCard.className = 'product-card';
            productCard.setAttribute('data-id', product.id);
            
            // Product badges
            let badgesHtml = '';
            if (product.isNew) {
                badgesHtml += '<span class="product-badge new">Yeni</span>';
            }
            if (product.isSale) {
                badgesHtml += '<span class="product-badge sale">İndirim</span>';
            }
            
            // Product HTML
            productCard.innerHTML = `
                <div class="product-image">
                    ${badgesHtml}
                    <img src="${product.image}" alt="${product.name}">
                    <div class="product-overlay">
                        <a href="#" class="quick-view" data-id="${product.id}">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a href="#" class="add-to-cart" data-id="${product.id}">
                            <i class="fas fa-shopping-cart"></i>
                        </a>
                        <a href="#" class="add-to-wishlist" data-id="${product.id}">
                            <i class="fas fa-heart"></i>
                        </a>
                    </div>
                </div>
                <div class="product-info">
                    <h3><a href="product.html?id=${product.id}">${product.name}</a></h3>
                    <p class="brand">${getCategoryName(product.category)}</p>
                    <div class="price">
                        ${oldPriceHtml}
                        <span class="current-price">${price} ₺</span>
                    </div>
                </div>
            `;
            
            // Add to products container
            productsContainer.appendChild(productCard);
        }
        
        // Render pagination
        renderPagination(totalPages);
        
        // Add event listeners to product actions
        addProductActionListeners();
    }

    // Render pagination
    function renderPagination(totalPages) {
        // Clear pagination container
        pagination.innerHTML = '';
        
        // Don't show pagination if only one page
        if (totalPages <= 1) {
            return;
        }
        
        // Previous page button
        if (currentPage > 1) {
            const prevButton = document.createElement('a');
            prevButton.href = '#';
            prevButton.className = 'prev';
            prevButton.innerHTML = '<i class="fas fa-chevron-left"></i>';
            prevButton.addEventListener('click', function(e) {
                e.preventDefault();
                currentPage--;
                renderProducts();
                // Scroll to top of products
                productsContainer.scrollIntoView({ behavior: 'smooth' });
            });
            pagination.appendChild(prevButton);
        }
        
        // Page numbers
        const maxPages = 5; // Maximum number of page links to show
        let startPage = Math.max(1, currentPage - Math.floor(maxPages / 2));
        let endPage = Math.min(totalPages, startPage + maxPages - 1);
        
        // Adjust start page if end page is maxed out
        if (endPage === totalPages) {
            startPage = Math.max(1, endPage - maxPages + 1);
        }
        
        // First page link if not in range
        if (startPage > 1) {
            const firstPage = document.createElement('a');
            firstPage.href = '#';
            firstPage.textContent = '1';
            firstPage.addEventListener('click', function(e) {
                e.preventDefault();
                currentPage = 1;
                renderProducts();
                productsContainer.scrollIntoView({ behavior: 'smooth' });
            });
            pagination.appendChild(firstPage);
            
            // Ellipsis if needed
            if (startPage > 2) {
                const ellipsis = document.createElement('span');
                ellipsis.className = 'ellipsis';
                ellipsis.textContent = '...';
                pagination.appendChild(ellipsis);
            }
        }
        
        // Page links
        for (let i = startPage; i <= endPage; i++) {
            const pageLink = document.createElement('a');
            pageLink.href = '#';
            pageLink.textContent = i;
            
            if (i === currentPage) {
                pageLink.className = 'active';
            }
            
            pageLink.addEventListener('click', function(e) {
                e.preventDefault();
                currentPage = i;
                renderProducts();
                productsContainer.scrollIntoView({ behavior: 'smooth' });
            });
            
            pagination.appendChild(pageLink);
        }
        
        // Ellipsis if needed
        if (endPage < totalPages - 1) {
            const ellipsis = document.createElement('span');
            ellipsis.className = 'ellipsis';
            ellipsis.textContent = '...';
            pagination.appendChild(ellipsis);
        }
        
        // Last page link if not in range
        if (endPage < totalPages) {
            const lastPage = document.createElement('a');
            lastPage.href = '#';
            lastPage.textContent = totalPages;
            lastPage.addEventListener('click', function(e) {
                e.preventDefault();
                currentPage = totalPages;
                renderProducts();
                productsContainer.scrollIntoView({ behavior: 'smooth' });
            });
            pagination.appendChild(lastPage);
        }
        
        // Next page button
        if (currentPage < totalPages) {
            const nextButton = document.createElement('a');
            nextButton.href = '#';
            nextButton.className = 'next';
            nextButton.innerHTML = '<i class="fas fa-chevron-right"></i>';
            nextButton.addEventListener('click', function(e) {
                e.preventDefault();
                currentPage++;
                renderProducts();
                productsContainer.scrollIntoView({ behavior: 'smooth' });
            });
            pagination.appendChild(nextButton);
        }
    }

    // Get category name
    function getCategoryName(category) {
        switch (category) {
            case 'men':
                return 'Erkek';
            case 'women':
                return 'Kadın';
            case 'accessories':
                return 'Aksesuar';
            default:
                return 'Diğer';
        }
    }

    // Add event listeners to product actions
    function addProductActionListeners() {
        // Quick view buttons
        const quickViewButtons = document.querySelectorAll('.quick-view');
        quickViewButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.getAttribute('data-id');
                // Open quick view modal
                // This would typically call a function to show a modal with product details
                console.log('Quick view for product ID:', productId);
            });
        });
        
        // Add to cart buttons
        const addToCartButtons = document.querySelectorAll('.add-to-cart');
        addToCartButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.getAttribute('data-id');
                addToCart(productId, 1);
            });
        });
        
        // Add to wishlist buttons
        const addToWishlistButtons = document.querySelectorAll('.add-to-wishlist');
        addToWishlistButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.getAttribute('data-id');
                addToWishlist(productId);
            });
        });
    }

    // Add product to cart
    function addToCart(productId, quantity) {
        // Get product
        const product = products.find(p => p.id === parseInt(productId));
        
        if (!product) {
            showNotification('Ürün bulunamadı.', 'error');
            return;
        }
        
        // Get cart from localStorage
        let cart = localStorage.getItem('dndCart');
        cart = cart ? JSON.parse(cart) : [];
        
        // Check if product already in cart
        const existingItem = cart.find(item => item.id === parseInt(productId));
        
        if (existingItem) {
            // Update quantity
            existingItem.quantity += quantity;
        } else {
            // Add new item
            cart.push({
                id: product.id,
                name: product.name,
                price: product.price,
                image: product.image,
                quantity: quantity
            });
        }
        
        // Save cart to localStorage
        localStorage.setItem('dndCart', JSON.stringify(cart));
        
        // Update cart count
        updateCartCount();
        
        // Show notification
        showNotification('Ürün sepete eklendi.', 'success');
    }

    // Add product to wishlist
    function addToWishlist(productId) {
        // Get product
        const product = products.find(p => p.id === parseInt(productId));
        
        if (!product) {
            showNotification('Ürün bulunamadı.', 'error');
            return;
        }
        
        // Get wishlist from localStorage
        let wishlist = localStorage.getItem('dndWishlist');
        wishlist = wishlist ? JSON.parse(wishlist) : [];
        
        // Check if product already in wishlist
        const existingItem = wishlist.find(item => item.id === parseInt(productId));
        
        if (existingItem) {
            // Show notification
            showNotification('Bu ürün zaten favorilerinizde.', 'info');
            return;
        }
        
        // Add to wishlist
        wishlist.push({
            id: product.id,
            name: product.name,
            price: product.price,
            image: product.image
        });
        
        // Save wishlist to localStorage
        localStorage.setItem('dndWishlist', JSON.stringify(wishlist));
        
        // Show notification
        showNotification('Ürün favorilere eklendi.', 'success');
    }

    // Update cart count
    function updateCartCount() {
        const cartCountElements = document.querySelectorAll('.cart-count');
        
        if (cartCountElements.length === 0) return;
        
        // Get cart from localStorage
        let cart = localStorage.getItem('dndCart');
        cart = cart ? JSON.parse(cart) : [];
        
        // Calculate total quantity
        const totalQuantity = cart.reduce((total, item) => total + item.quantity, 0);
        
        // Update cart count elements
        cartCountElements.forEach(element => {
            element.textContent = totalQuantity;
            
            // Show/hide based on quantity
            if (totalQuantity > 0) {
                element.style.display = 'flex';
            } else {
                element.style.display = 'none';
            }
        });
    }

    // Show notification
    function showNotification(message, type = 'info') {
        // Create notification element
        const notification = document.createElement('div');
        notification.className = `shop-notification ${type}`;
        
        // Set icon based on type
        let icon = 'info-circle';
        if (type === 'success') icon = 'check-circle';
        if (type === 'error') icon = 'exclamation-circle';
        
        // Set content
        notification.innerHTML = `
            <div class="notification-content">
                <i class="fas fa-${icon}"></i>
                <p>${message}</p>
            </div>
            <button class="notification-close">
                <i class="fas fa-times"></i>
            </button>
        `;
        
        // Add to document
        document.body.appendChild(notification);
        
        // Show notification
        setTimeout(() => {
            notification.classList.add('show');
        }, 10);
        
        // Add close button event
        const closeBtn = notification.querySelector('.notification-close');
        if (closeBtn) {
            closeBtn.addEventListener('click', function() {
                hideNotification(notification);
            });
        }
        
        // Auto hide after delay
        setTimeout(() => {
            hideNotification(notification);
        }, 3000);
    }

    // Hide notification
    function hideNotification(notification) {
        notification.classList.remove('show');
        
        // Remove from DOM after animation
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }

    // Setup event listeners
    function setupEventListeners() {
        // Sort select
        if (sortSelect) {
            sortSelect.addEventListener('change', function() {
                sortOption = this.value;
                sortProducts();
                renderProducts();
            });
        }
        
        // Category links
        if (categoryLinks.length > 0) {
            categoryLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Remove active class from all links
                    categoryLinks.forEach(l => l.classList.remove('active'));
                    
                    // Add active class to clicked link
                    this.classList.add('active');
                    
                    // Update active filters
                    activeFilters.category = this.getAttribute('data-category');
                    
                    // Apply filters
                    applyFilters();
                    
                    // Render products
                    renderProducts();
                    
                    // Close mobile filters if open
                    if (window.innerWidth < 768 && shopSidebar.classList.contains('active')) {
                        shopSidebar.classList.remove('active');
                        filterOverlay.classList.remove('active');
                        document.body.style.overflow = '';
                    }
                });
            });
        }
        
        // Color filters
        if (colorFilters.length > 0) {
            colorFilters.forEach(filter => {
                filter.addEventListener('change', function() {
                    // Update active filters
                    activeFilters.colors = Array.from(colorFilters)
                        .filter(f => f.checked)
                        .map(f => f.value);
                });
            });
        }
        
        // Size filters
        if (sizeFilters.length > 0) {
            sizeFilters.forEach(filter => {
                filter.addEventListener('change', function() {
                    // Update active filters
                    activeFilters.sizes = Array.from(sizeFilters)
                        .filter(f => f.checked)
                        .map(f => f.value);
                });
            });
        }
        
        // Apply price filter
        if (applyPriceFilterBtn && priceSlider) {
            applyPriceFilterBtn.addEventListener('click', function() {
                const values = priceSlider.noUiSlider.get();
                activeFilters.priceMin = parseInt(values[0]);
                activeFilters.priceMax = parseInt(values[1]);
                
                // Apply filters
                applyFilters();
                
                // Render products
                renderProducts();
                
                // Close mobile filters if open
                if (window.innerWidth < 768 && shopSidebar.classList.contains('active')) {
                    shopSidebar.classList.remove('active');
                    filterOverlay.classList.remove('active');
                    document.body.style.overflow = '';
                }
            });
        }
        
        // Apply all filters
        if (applyFiltersBtn) {
            applyFiltersBtn.addEventListener('click', function() {
                // Apply filters
                applyFilters();
                
                // Render products
                renderProducts();
                
                // Close mobile filters if open
                if (window.innerWidth < 768 && shopSidebar.classList.contains('active')) {
                    shopSidebar.classList.remove('active');
                    filterOverlay.classList.remove('active');
                    document.body.style.overflow = '';
                }
            });
        }
        
        // Reset filters
        if (resetFiltersBtn) {
            resetFiltersBtn.addEventListener('click', function() {
                // Reset all filters
                resetAllFilters();
                
                // Apply filters
                applyFilters();
                
                // Render products
                renderProducts();
                
                // Close mobile filters if open
                if (window.innerWidth < 768 && shopSidebar.classList.contains('active')) {
                    shopSidebar.classList.remove('active');
                    filterOverlay.classList.remove('active');
                    document.body.style.overflow = '';
                }
            });
        }
        
        // Update cart count on page load
        updateCartCount();
    }

    // Reset all filters
    function resetAllFilters() {
        // Reset category
        activeFilters.category = 'all';
        categoryLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('data-category') === 'all') {
                link.classList.add('active');
            }
        });
        
        // Reset colors
        activeFilters.colors = [];
        colorFilters.forEach(filter => {
            filter.checked = false;
        });
        
        // Reset sizes
        activeFilters.sizes = [];
        sizeFilters.forEach(filter => {
            filter.checked = false;
        });
        
        // Reset price
        if (priceSlider) {
            priceSlider.noUiSlider.set([0, 5000]);
            activeFilters.priceMin = 0;
            activeFilters.priceMax = 5000;
        }
        
        // Reset sort
        if (sortSelect) {
            sortSelect.value = 'default';
            sortOption = 'default';
        }
    }

    // Initialize shop
    initShop();
    
    // Update cart count on page load
    updateCartCount();
}); 